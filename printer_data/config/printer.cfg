[include shell_command.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
#[include timelapse.cfg]
[include KAMP_Settings.cfg]
#[include ./KAMP/Adaptive_Meshing.cfg]
#[include ./KAMP/Voron_Purge.cfg

########################################  

#  MCU & FIRMWARE

######################################## 

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_0F0016000F50415833323520-if00


restart_method: command

[printer]
kinematics: cartesian
max_velocity: 800
max_accel: 10000
max_accel_to_decel: 10000
max_z_velocity: 10
square_corner_velocity: 5.0
max_z_accel: 100

[firmware_retraction]
retract_length: 0.8
retract_speed: 35
unretract_extra_length: 0
unretract_speed: 35

[pause_resume]
recover_velocity: 25

[display_status]  


########################################  

# ADXL345

######################################## 

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:gpiochip0/gpio74
#spi_bus: spidev1.1

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
# 100, 100, 20

[input_shaper]
shaper_freq_x: 46.6
shaper_type_x: mzv
shaper_freq_y: 29.2
shaper_type_y: mzv


########################################  

# Drivers (Motor 1-5. X, Y, Z-A, Z-B, E) 

######################################## 

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: -4
position_min: -4
position_max: 235
homing_speed: 70

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -4
position_min: -4
position_max: 226
homing_speed: 70

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -5
homing_speed: 10

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
gear_ratio: 42:12
rotation_distance: 26.359
nozzle_diameter: 0.400
pressure_advance: 0.02
#max_extrude_cross_section: 3
filament_diameter: 1.750
heater_pin: PC8
sensor_type:  ATC Semitec 104NT-4-R025H42G 
sensor_pin: PA0
#control: pid
#pid_Kp: 19.558
#pid_Ki: 1.087
#pid_Kd: 88.011
min_temp: 0
max_temp: 300

# ---------- X Stepper ----------
  # LDO 42STH40-1684AC, .8A peak RMS (per phase)
# -------------------------------

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
driver_SGTHRS: 100
uart_address: 0
interpolate: true
run_current: 0.850 #Recomended .8 or higher for LDO 42STH40-1684AC Motor
#stealthchop_threshold: 999999

# ---------- Y Stepper ----------
  # LDO 42STH40-1684AC, .8A peak RMS (per phase)
# -------------------------------

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
driver_SGTHRS: 110
uart_address: 2
interpolate: true
run_current: 0.850 #Recomended .8 or higher for LDO 42STH40-1684AC Motor
#stealthchop_threshold: 999999

# ---------- Z Stepper ----------
# CREALITY 42-34, 0.8A peak RMS (per phase)
# -------------------------------

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: true
run_current: 0.580 #Recommended .6 or higher. Using Dual Z
#stealthchop_threshold: 999999

# ---------- E Stepper ----------
  # CREALITY Sprite Extruder 40-25, .8A peak RMS (per phase)
# -------------------------------

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.400 
stealthchop_threshold: 999999

####################################################################  

# 	Fan Control & Heater  

#####################################################################  

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 72.052
#pid_ki = 2.001
#pid_kd = 648.470
min_temp: 0
max_temp: 110

[temperature_sensor SKR_MINI_E3_V3] 
sensor_type: temperature_mcu 
min_temp: 0 
max_temp: 80

[temperature_sensor BTT_PI4B_CB1] 
sensor_type: temperature_host 
min_temp: 0 
max_temp: 80

##################################################  

[heater_fan hotend_fan]
pin: PC7
fan_speed: 0.9

[heater_fan mainboard_fan]
pin: PB15
fan_speed: 0.5

[fan] #Part_Cooling_Fan
pin: PC6


#####################################################################  

# 	CR-Touch & homing  

#####################################################################  

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -48
y_offset: 0
#z_offset: 0.355
probe_with_touch_mode: true
stow_on_each_sample: false

[bed_mesh]  
speed: 120  
horizontal_move_z: 5 
mesh_min: 10,20
mesh_max: 200.2, 191.5
probe_count: 4,4 
algorithm:  bicubic
fade_start: 1 
fade_end: 10 
fade_target: 0 

[delayed_gcode bed_mesh_init] 
initial_duration: .01 
gcode: 
  BED_MESH_PROFILE LOAD=default 

[safe_z_home] 
home_xy_position: 163, 116
speed: 75 
z_hop: 10 
z_hop_speed: 5 
move_to_previous: true 

#[bed_screws]    #Re-Write for accurate location
#screw1: 30, 25
#screw2: 200, 24
#screw3: 200, 195
#screw4: 30, 195

#####################################################################  

# 	Macros

#####################################################################  

[exclude_object] 

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.530
#*# pid_ki = 0.902
#*# pid_kd = 95.198
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.297
#*# pid_ki = 1.913
#*# pid_kd = 609.553
#*#
#*# [bltouch]
#*# z_offset = 0.855
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.022500, 0.025000, 0.015000
#*# 	  0.012500, -0.005000, 0.012500
#*# 	  0.012500, 0.002500, -0.002500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 94.0
#*# max_x = 116.0
#*# min_y = 104.0
#*# max_y = 126.0
#*#
#*# [input_shaper]
